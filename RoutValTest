package org.saki;

import java.util.ArrayList;
import java.util.Collections;

import org.saki.display.RoutValCondGroupDisplay;
import org.saki.display.RoutValDisplay;
import org.saki.display.RoutValEnvironmentDisplay;
import org.saki.display.RoutValRoutObjectDisplay;
import org.saki.display.RoutValRoutingValues;

public class RoutValTest {

	public static void main(String[] args) {

		ArrayList<RoutVal> routValList = new ArrayList<RoutVal>();

		routValList.add(new RoutVal("DV", 669, "RCV_B", 1, 1,
				"true", "ROUT_OBJ1", "X1",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("DV", 669, "RCV_B", 1, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("DV", 669, "RCV_B", 2, 1,
				"true", "ROUT_OBJ1", "X2",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("DV", 669, "RCV_B", 2, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("DV", 669, "RCV_B", 3, 1,
				"true", "ROUT_OBJ1", "X3",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("DV", 669, "RCV_B", 3, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));

		routValList.add(new RoutVal("RT", 669, "RCV_B", 1, 1,
				"true", "ROUT_OBJ1", "X1",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("RT", 669, "RCV_B", 1, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("RT", 669, "RCV_B", 2, 1,
				"true", "ROUT_OBJ1", "X2",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("RT", 669, "RCV_B", 2, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("RT", 669, "RCV_B", 3, 1,
				"true", "ROUT_OBJ1", "X3",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("RT", 669, "RCV_B", 3, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));

		routValList.add(new RoutVal("PP", 669, "RCV_B", 1, 1,
				"true", "ROUT_OBJ1", "X1",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PP", 669, "RCV_B", 1, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PP", 669, "RCV_B", 2, 1,
				"true", "ROUT_OBJ1", "X2",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PP", 669, "RCV_B", 2, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PP", 669, "RCV_B", 3, 1,
				"true", "ROUT_OBJ1", "X3",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PP", 669, "RCV_B", 3, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));

		routValList.add(new RoutVal("PR", 669, "RCV_B", 1, 1,
				"true", "ROUT_OBJ1", "X1",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PR", 669, "RCV_B", 1, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PR", 669, "RCV_B", 2, 1,
				"true", "ROUT_OBJ1", "X2",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PR", 669, "RCV_B", 2, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PR", 669, "RCV_B", 3, 1,
				"true", "ROUT_OBJ1", "X3",
				"SND_B",
				"INT_B"));
		routValList.add(new RoutVal("PR", 669, "RCV_B", 3, 2,
				"true", "ROUT_OBJ2", "3607",
				"SND_B",
				"INT_B"));

		routValList.add(new RoutVal("DV", 176, "RCV_C", 1, 1,
				"true", "INVOIC_RCVPRN", "MYETSTS001", "SND_C",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("DV", 176, "RCV_C", 1, 2,
				"true", "INVOIC_RCVPRN", "SGETSTS001", "SND_C",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("DV", 1335, "RCV_C", 1,
				3, "true", "INVOIC_RCVPRN", "AUETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("DV", 1335, "RCV_C", 1,
				4, "true", "INVOIC_RCVPRN", "CNETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("DV", 1335, "RCV_C", 1,
				5, "true", "INVOIC_RCVPRN", "EGETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("DV", 1335, "RCV_C", 1,
				6, "true", "INVOIC_RCVPRN", "GHETSTS001", "SND_D",
				"INVOIC.INVOIC02"));

		routValList.add(new RoutVal("RT", 176, "RCV_C", 1, 1,
				"true", "INVOIC_RCVPRN", "MYETSTS001", "SND_C",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("RT", 176, "RCV_C", 1, 2,
				"true", "INVOIC_RCVPRN", "SGETSTS001", "SND_C",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("RT", 1335, "RCV_C", 1,
				3, "true", "INVOIC_RCVPRN", "AUETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("RT", 1335, "RCV_C", 1,
				4, "true", "INVOIC_RCVPRN", "CNETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("RT", 1335, "RCV_C", 1,
				5, "true", "INVOIC_RCVPRN", "EGETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("RT", 1335, "RCV_C", 1,
				6, "true", "INVOIC_RCVPRN", "GHETSTS001", "SND_D",
				"INVOIC.INVOIC02"));

		routValList.add(new RoutVal("PP", 176, "RCV_C", 1, 1,
				"true", "INVOIC_RCVPRN", "MYETSTS001", "SND_C",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PP", 176, "RCV_C", 1, 2,
				"true", "INVOIC_RCVPRN", "SGETSTS001", "SND_C",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PP", 1335, "RCV_C", 1,
				3, "true", "INVOIC_RCVPRN", "AUETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PP", 1335, "RCV_C", 1,
				4, "true", "INVOIC_RCVPRN", "CNETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PP", 1335, "RCV_C", 1,
				5, "true", "INVOIC_RCVPRN", "EGETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PP", 1335, "RCV_C", 1,
				6, "true", "INVOIC_RCVPRN", "GHETSTS001", "SND_D",
				"INVOIC.INVOIC02"));

		routValList.add(new RoutVal("PR", 176, "RCV_C", 1, 1,
				"true", "INVOIC_RCVPRN", "MYETSTS001", "SND_C",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PR", 176, "RCV_C", 1, 2,
				"true", "INVOIC_RCVPRN", "SGETSTS001", "SND_C",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PR", 1335, "RCV_C", 1,
				3, "true", "INVOIC_RCVPRN", "AUETSTS002", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PR", 1335, "RCV_C", 1,
				4, "true", "INVOIC_RCVPRN", "CNETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PR", 1335, "RCV_C", 1,
				5, "true", "INVOIC_RCVPRN", "EGETSTS001", "SND_D",
				"INVOIC.INVOIC02"));
		routValList.add(new RoutVal("PR", 1335, "RCV_C", 1,
				6, "true", "INVOIC_RCVPRN", "GHETSTS001", "SND_D",
				"INVOIC.INVOIC02"));

		Collections.sort(routValList);

		for (RoutVal sourceData : routValList) {
			System.out.println(sourceData);

		}

	String rcvList_prev = "";
		String envType_prev = "";

		int condGroup_prev = 0;
		String routeObj_prev = "";
		String logBusSys_prev = "";
		String interfaceName_prev = "";

		ArrayList<RoutValDisplay> routValDispList = new ArrayList<RoutValDisplay>();
		
		ArrayList<RoutValRoutingValues> routValRoutValList = null;
		ArrayList<RoutValCondGroupDisplay> routValCondGroupList = null; 

		ArrayList<RoutValRoutObjectDisplay> routValRoutObjList = null;
		ArrayList<RoutValEnvironmentDisplay> routValDispEnvList = null;
		ArrayList<RoutValInterface> routValInterfaceList = null;
		ArrayList<RoutValReceiverList> routValReceiverList = null;

		
		
			

		for (RoutVal sourceData : routValList) {

			RoutValRoutObjectDisplay routValRoutObject = new RoutValRoutObjectDisplay();
			RoutValDisplay routValDisp = new RoutValDisplay();
			RoutValEnvironmentDisplay routValDispEnv = new RoutValEnvironmentDisplay();
			RoutValRoutingValues routValRoutingValue = new RoutValRoutingValues();
			RoutValCondGroupDisplay condGroupDisplay = new RoutValCondGroupDisplay();
			RoutValInterface routValInterface = new RoutValInterface();
			RoutValReceiverList rcvrList = new RoutValReceiverList();
			
			
			String logBusSys = sourceData.getLogSndSys();
			String interfaceName = sourceData.getInterfaceName();
			String rcvList = sourceData.getRcvList();
			int condGroup = sourceData.getCondGroup();
			String routeObj = sourceData.getRouteObj();
			String envType = sourceData.getEnvType();
			Boolean active = sourceData.getActive();
			int counter = sourceData.getCounter();
			String routingValue = sourceData.getRoutingValue();



			if (!logBusSys.equals(logBusSys_prev)){
				routValDisp.setLogSndSys(logBusSys);				
				
				routValDispList.add(routValDisp);
				
				routValInterfaceList = new ArrayList<RoutValInterface>();
				routValDisp.setRoutValInterfaceList(routValInterfaceList);				
				
			}

			
			if ((!logBusSys.equals(logBusSys_prev))
					|| (!interfaceName.equals(interfaceName_prev))){
				
				routValInterface.setInterfaceName(interfaceName);
				routValInterfaceList.add(routValInterface);
				
				routValReceiverList = new ArrayList<RoutValReceiverList>();
				routValInterface.setRoutValRcvrList(routValReceiverList);
				
			}

			

			
			if ((!logBusSys.equals(logBusSys_prev))
					|| (!interfaceName.equals(interfaceName_prev))
					|| (!rcvList.equals(rcvList_prev))
					) 
			{




				rcvrList.setRcvList(rcvList);
				routValReceiverList.add(rcvrList);
				
				
				
				routValCondGroupList = new ArrayList<RoutValCondGroupDisplay>();
				rcvrList.setRoutValcondGroupDisplayList(routValCondGroupList);				
			}
			
			
			
			
			
			
			
			if ( (!logBusSys.equals(logBusSys_prev))||
					(!rcvList.equals(rcvList_prev))||
					(!interfaceName.equals(interfaceName_prev) ||
					(condGroup != condGroup_prev)
					
					))
				
			{
											
				condGroupDisplay.setCondGroup(condGroup);
				
				routValCondGroupList.add(condGroupDisplay);				
				
				routValRoutObjList = new ArrayList<RoutValRoutObjectDisplay>();
				condGroupDisplay.setRoutObject(routValRoutObjList);				

			}			
			
			if ( (!logBusSys.equals(logBusSys_prev))||
					(condGroup != condGroup_prev) ||
					(!rcvList.equals(rcvList_prev))||
					(!interfaceName.equals(interfaceName_prev)||					
					(!routeObj.equals(routeObj_prev))
					
					))
						 { 
				
				routValRoutObject.setRouteObj(routeObj);
				routValRoutObjList.add(routValRoutObject);
				
				routValDispEnvList = new ArrayList<RoutValEnvironmentDisplay>();
				routValRoutObject.setRoutingEnvValue(routValDispEnvList);
				
	
				
				
						 }
			
			if ( (!logBusSys.equals(logBusSys_prev))||
					(condGroup != condGroup_prev) ||
					(!rcvList.equals(rcvList_prev))||
					(!interfaceName.equals(interfaceName_prev)||					
					(!routeObj.equals(routeObj_prev))||
					(!envType.equals(envType_prev))
					))
			{
				routValDispEnv.setEnvType(envType);
				
				routValDispEnvList.add(routValDispEnv);
				
				routValRoutValList = new ArrayList<RoutValRoutingValues>();
				routValDispEnv.setRoutValue(routValRoutValList);
				
				
				
			}
			
			routValRoutingValue.setActive(active);
			routValRoutingValue.setCounter(counter);
			routValRoutingValue.setRoutingValue(routingValue);
			routValRoutValList.add(routValRoutingValue);
			
			

			logBusSys_prev = logBusSys;
			interfaceName_prev = interfaceName;
			rcvList_prev = rcvList;
			condGroup_prev = condGroup;
			routeObj_prev = routeObj;
			envType_prev = envType;


		}
		
		System.out.println();		
		System.out.println();
		System.out.println(" ***************************************************");		
		System.out.println();
		System.out.println();

		
		for (RoutValDisplay routValDisp2 : routValDispList) {

			System.out.println(" Bus Sys* " + routValDisp2.getLogSndSys());{
				
				for (RoutValInterface routValInt : routValDisp2.getRoutValInterfaceList()) {
					
					System.out.println(" Interface ** " + routValInt.getInterfaceName());
				
					for (RoutValReceiverList routValRcvrList : routValInt.getRoutValRcvrList()){
						
						System.out.println(" ReceiverList *** " + routValRcvrList.getRcvList());

			for (RoutValCondGroupDisplay routValCondDisplay : routValRcvrList.getRoutValcondGroupDisplayList()) {
				System.out.println(" Cond Group : **** ***********" + routValCondDisplay.getCondGroup());

				
				for (RoutValRoutObjectDisplay routObjDispl : routValCondDisplay.getRoutObject()) {
					System.out.println(" Routing Object : **** ***********"
							+ routObjDispl.getRouteObj());
					
						
					for( RoutValEnvironmentDisplay envVal : routObjDispl.getRoutingEnvValue() ) {
						System.out.println(" Env Value : **** *********** *******" + envVal.getEnvType());
						
						for( RoutValRoutingValues routVal : envVal.getRoutValue() ) {
							System.out.println(" Routing Value : **** *********** ******* ********** " + routVal.getCounter() +   routVal.isActive() + routVal.getRoutingValue());

						}
						
					}
					
					
				}
			
			
			}}}

		}
			}

	}
